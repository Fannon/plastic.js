/*! plastic - v0.0.1 - 2014-04-17
* https://github.com/Fannon/plasticjs
* Copyright (c) 2014 Simon Heimler; Licensed MIT */
var plastic=function(){return $(document).ready(function(){console.log("plastic.js version: "+plastic.version),plastic.$elements=$("plastic"),plastic.$elements.each(function(){plastic.prepareCanvas($(this)),plastic.getPlasticElementData($(this))})}),{version:"0.0.2",$elements:[],dataParser:{available:{}},queryParser:{available:{}},schemaParser:{available:{}},display:{available:{}},helper:{}}}();plastic.options={width:"100%"},plastic.callDisplayModule=function(a){var b=plastic.display.available[a.options.display];plastic.display[b](a)},plastic.callParseData=function(a){console.info("PARSING DATA"),console.dir(a);var b=plastic.dataParser.available[a.options.dataFormat];a.data=plastic.dataParser[b](a.rawData),plastic.callDisplayModule(a)},plastic.getPlasticElementData=function(a){var b={},c=!1;if(console.info("main.getPlasticData(el)"),b.dataUrl=a.attr("data-url"),b.dataUrl){c=!0;{$.ajax(b.dataUrl).done(function(a){console.log("Getting Data from URL via AJAX");try{b.rawData=null!==a&&"object"==typeof a?a:$.parseJSON(a)}catch(c){console.error(c)}console.log("Received asynchronous data."),plastic.callParseData(b)}).fail(function(){console.error("error")}).always(function(){})}}else{var d=a.find(".plastic-data");if(d.length>0){var e=d[0].text;console.log(e),e&&""!==e?b.rawData=$.parseJSON(e):console.log("Empty Element!")}else console.log("No Data Object")}var f=a.find(".plastic-options");if(f.length>0){var g=f[0].text;g&&""!==g?b.options=JSON.parse(g):console.log("Empty Element!")}else console.log("No Options Object");b.height=a.height(),b.width=a.width(),c||(console.log("Received Synchronous Data"),plastic.callParseData(b))},plastic.prepareCanvas=function(a){console.info("PREPARING VISUALISATION"),a.append('<div id="vis"></div>'),$("#vis").height(a.height()).width(a.width()).css("overflow","scroll").css("padding","5px")},plastic.dataParser.available["sparql-json"]="sparqlJson",plastic.dataParser.sparqlJson=function(a){console.info("PARSING DATA VIA: SPARQL JSON"),console.dir(a);for(var b=[],c=0;c<a.results.bindings.length;c++){b[c]={};var d=a.results.bindings[c];for(var e in d)b[c][e]=d[e].value}return console.dir(b),b},plastic.queryParser.available.sparql="sparql",plastic.queryParser.sparql=function(){},plastic.display.available.table="table",plastic.display.table=function(a){console.info("DISPLAY MODULE: TABLE"),console.dir(a);var b=a.data,c=d3.select("#vis"),d=c.append("table"),e=d.append("thead"),f=d.append("tbody"),g=[];for(var h in b[0])b[0].hasOwnProperty(h)&&g.push(h);e.append("tr").selectAll("th").data(g).enter().append("th").text(function(a){return a});{var i=f.selectAll("tr").data(b).enter().append("tr");i.selectAll("td").data(function(a){return g.map(function(b){return{column:b,value:a[b]}})}).enter().append("td").html(function(a){return a.value})}return $("table").addClass("table table-condensed"),d},plastic.helper.log=function(a,b){console.log(a+" :: "+b)};